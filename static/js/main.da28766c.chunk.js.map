{"version":3,"sources":["store.js","counter.js","dashboard.js","model.js","App.js","serviceWorker.js","index.js"],"names":["CTX","React","createContext","msg","user","clearUsers","addMsg","addUser","deleteUser","setToken","setShowCounter","messageCounterAdder","authToken","messageCounter","showCounter","Store","props","initState","console","log","state","length","newMsg","newArray","push","setState","newUser","token","partedUser","index","indexOf","splice","useState","Provider","value","children","useStyles","makeStyles","counter","margin","color","backgroundColor","red","position","top","right","Counter","useContext","classes","Grid","container","Avatar","className","theme","root","padding","spacing","flex","display","alignItems","userWindow","width","height","borderRight","overflowY","chatWindow","chatBox","button","Dashboard","textValue","changeTextValue","Paper","Typography","variant","component","List","map","ListItem","key","ListItemText","primary","chat","i","Chip","label","chip","created","event","message","status","TextField","onChange","e","target","Button","onClick","xhr","XMLHttpRequest","open","FD","FormData","append","setRequestHeader","onreadystatechange","readyState","send","sendMessage","Popup","username","password","showPopup","handleChangeUsername","bind","handleChangePassword","handleSubmit","startEventSource","this","eventSource","EventSource","context","messageAdder","userAdder","userDeleter","addEventListener","jsonData","JSON","parse","data","close","includes","users","preventDefault","tokenSetter","jsonResponse","responseText","style","left","bottom","borderRadius","background","text","onSubmit","type","name","Component","contextType","App","history","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da28766c.chunk.js","sourcesContent":["import React from 'react'\n\nexport const CTX = React.createContext({\n    msg:[],\n    user:[],\n    clearUsers: () => {},\n    addMsg: () => {},\n    addUser: () => {},\n    deleteUser: () => {},\n    setToken:() => {},\n    setShowCounter:() => {},\n    messageCounterAdder:() => {},\n    authToken:'',\n    messageCounter:0,\n    showCounter:false\n});\n\n\n\nexport default function Store(props){\n\n\tconst clearUsers = () =>{\n\t\tconsole.log(\"before call user \" + state.user.length)\n\t\tstate.user = []\n\t\tconsole.log(\"after call user \" + state.user.length)\n\t}\n\n\tconst setShowCounter = () => {\n\t\tconsole.log(\"before call stateCounter \" + state.showCounter)\n\t\tstate.showCounter = !state.showCounter\n\t\tconsole.log(\"after call stateCounter \" + state.showCounter)\n\t}\n\n\tconst messageCounterAdder = () =>{\n\t\tstate.messageCounter = state.messageCounter+1\n\t}\n\n\tconst addMsg = (newMsg) =>{\n\t\tvar newArray = state.msg;\n\t\tnewArray.push(newMsg);  \n\t\tsetState({...state , msg:newArray})\n\t}\n\n\tconst addUser = (newUser) =>{\n\t\tvar newArray = state.user;\n\t\tnewArray.push(newUser);  \n\t\tsetState({...state, user:newArray})\n\t}\n\n\tconst setToken = (token) =>{\n\t\tstate.authToken = token\n\t}\n\n\tconst deleteUser = (partedUser) =>{\n\t\tvar newArray = state.user; \n\t\tvar index = newArray.indexOf(partedUser);\n\t\tif (index !== -1) newArray.splice(index, 1);\n\t\tsetState({...state, user:newArray})\n\t}\n\n\tconst initState = {\n\t\tmsg:[],\t    \n        user:[],\n        clearUsers: clearUsers,\n\t    addMsg: addMsg,\n\t    addUser: addUser,\n\t    setToken: setToken,\n\t    setShowCounter: setShowCounter,\n\t    deleteUser:deleteUser,\n\t    messageCounterAdder:messageCounterAdder,\n\t    authToken:'',\n\t    messageCounter:0,\n\t    showCounter:false\n\t}\n\n\n\tconst [state, setState] = React.useState(initState)\n\n\treturn (\n\t\t<CTX.Provider value = {state}>\n\t\t\t{props.children}\n\t\t</CTX.Provider>\n\t)\n} ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\nimport {CTX} from './store'\n\nconst useStyles = makeStyles({\n  counter: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: red[800],\n    position: 'absolute',\n    top: '110px',\n    right: '500px',\n\n  },\n});\n\nexport default function Counter() {\n\n  const state = React.useContext(CTX);\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Avatar className={classes.counter}>{state.messageCounter}</Avatar>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';  \nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {CTX} from './store'\nimport Counter from './counter'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"100px\",\n    padding: theme.spacing(3, 2),\n  },\n\n  flex:{\n    display:'flex',\n    alignItems:'center'\n  },\n\n  userWindow:{\n    width:'30%',\n    height: '500px',\n    borderRight: '1px solid black',\n    overflowY: 'scroll'\n  },\n\n  chatWindow:{\n    width:'70%',\n    height: '500px',\n    padding:'30px',\n    overflowY: 'scroll'\n  },\n\n  chatBox:{\n    width:'85%'\n  },\n\n  button:{\n    width:'15%'\n  }\n\n}));\n\nfunction sendMessage(value, token){\n\n  //console.log(\"The passed in token is \" + token)\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", 'http://chat.cs291.com/message', true);\n  //xhr.open(\"POST\", 'http://localhost:4567/message', true);\n  var FD  = new FormData();\n  FD.append('message', value);\n  xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n  //xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === 4 && xhr.status === 201) { \n       console.log(\"Message sent:\" + value)\n    }\n  };\n    xhr.send(FD);\n\n}\n\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const state = React.useContext(CTX);\n  const [textValue, changeTextValue] = React.useState('');\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          Chat App\n        </Typography>\n \n        <Typography component=\"p\">\n          CS291A\n        </Typography>\n\n        {state.showCounter ?  \n          <Counter/> :  null \n        } \n        \n        <div className={classes.flex}>\n          \n          <div className={classes.userWindow}>\n            Online\n            <List>\n            {\n              state.user.map(user => \n              (\n                <ListItem key = {user} button>\n                  <ListItemText primary= {user} />\n                </ListItem>\n              ))\n            }\n            \n            \n\n            </List>\n\n          </div>\n          \n          <div className={classes.chatWindow}>\n            \n          {\n            state.msg.map((chat, i) => (\n              <div className={classes.flex} key={i}>\n                <Chip label={chat.user} className={classes.chip} />\n                <Typography component=\"p\">{chat.created} {chat.event} {chat.user} {chat.message} {chat.status} </Typography>\n              </div>\n              ))\n          }\n          \n          </div>\n\n        </div>\n\n        <TextField  \n          label=\"send a message\"\n          className={classes.chatBox}\n          value={textValue}\n          onChange={e => changeTextValue(e.target.value)}\n        />\n\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          className={classes.button}\n          onClick ={() => {\n            {sendMessage(textValue, state.authToken)};\n            changeTextValue('');\n          }\n\n          } \n        >\n          Send\n        </Button>\n\n\n      </Paper>\n    </div>\n  );\n}","import React from 'react'; \nimport {CTX} from './store'\n\n\n\nclass Popup extends React.Component {  \n\nstatic contextType = CTX\n\n\nconstructor(props) {\n    super(props);\n    this.state = {username: '', password: '', showPopup: true,};\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.startEventSource = this.startEventSource.bind(this);\n }\n\n\n\n startEventSource(token) {\n  \n  console.log(\"eventSource started\")\n  this.eventSource = new EventSource(`http://chat.cs291.com/stream/${token}`);\n  //this.eventSource = new EventSource(`http://localhost:4567/stream/${token}`);\n  const msg = this.context.msg\n  \n  const messageAdder = this.context.addMsg\n  const userAdder = this.context.addUser\n  const userDeleter = this.context.deleteUser\n  const setShowCounter = this.context.setShowCounter\n  const messageCounterAdder = this.context.messageCounterAdder\n  const clearUsers = this.context.clearUsers\n  \n   this.eventSource.addEventListener(\"Disconnect\", e =>{\n\t  var jsonData = JSON.parse(e.data)\n  \tmessageAdder({\"event\":\"Disconnect\", \"created\":`${jsonData.created}`, \"user\":\"\", \"users\":\"\", \"message\":\"\", \"status\":\"\"})\n  \tconsole.log(\"Disconnect\")\n    this.eventSource.close()\n    \n    clearUsers()\n    console.log(\"curr u are \" + this.context.user.length)\n    \n    \n    console.log(\"show is before \" + this.context.showCounter)\n    setShowCounter()\n    console.log(\"show is after \" + this.context.showCounter)\n    this.props.handleSubmit()\n\t}\t\n   ); \n\n    this.eventSource.addEventListener(\"Message\", e =>{\n    \tvar jsonData = JSON.parse(e.data)\n\t\tmessageAdder({\"event\":\"Message\", \"created\":`${jsonData.created}`, \"user\":`${jsonData.user}`, \"users\":\"\", \"message\":`${jsonData.message}`, \"status\":\"\"})\n\t\tmessageCounterAdder()\n    console.log(\"Message from: \" + jsonData.user )  \n\t\t}  \n\n\t);\n\n    this.eventSource.addEventListener(\"Join\", e =>{\n      var jsonData = JSON.parse(e.data)\n      messageAdder({\"event\":\"Join\", \"created\":`${jsonData.created}`, \"user\":`${jsonData.user}`, \"users\":\"\", \"message\":\"\", \"status\":\"\"})\n      if (!this.context.user.includes(jsonData.user)){\n        userAdder(jsonData.user)\n      }\n        \n\t  console.log(\"Join\")    \n\t  }\n    );\n\n    this.eventSource.addEventListener(\"Part\", e =>{\n      var jsonData = JSON.parse(e.data)\n      messageAdder({\"event\":\"Part\", \"created\":`${jsonData.created}`, \"user\":`${jsonData.user}`, \"users\":\"\", \"message\":\"\", \"status\":\"\"})\n\t    userDeleter(jsonData.user)\n      console.log(\"Part\") }\n\n\t   );\n\n    this.eventSource.addEventListener(\"ServerStatus\", e =>{\n\t  var jsonData = JSON.parse(e.data)\n      messageAdder({\"event\":\"ServerStatus\", \"created\":`${jsonData.created}`, \"user\":\"\", \"users\":\"\", \"message\":\"\", \"status\":\"server started\"})\n\t    console.log(\"ServerStatus\") \n\t}\n   );\n\n    this.eventSource.addEventListener(\"Users\", e =>{\n      var jsonData = JSON.parse(e.data)\n      messageAdder({\"event\":\"Users\", \"created\":`${jsonData.created}`, \"user\":\"\", \"users\":`jsonData.users`, \"message\":\"\", \"status\":\"\"})\n\t    var users = jsonData.users\n      for(var i = 0; i < users.length; i++){\n        console.log(\"add \" + (users[i]))\n        userAdder(users[i])\n      }\n       console.log(\"Users\")\n\t}\n    );\n}\n\n handleChangeUsername(event) {\n    this.setState({username: event.target.value});\n }\n\n handleChangePassword(event) {\n    this.setState({password: event.target.value});\n }\n\nhandleSubmit(event){\n\tconst setShowCounter = this.context.setShowCounter\n\tevent.preventDefault();\n\t//this.props.handleSubmit(this.state.username, this.state.password);\n    var xhr = new XMLHttpRequest();\n    var FD  = new FormData();\n    FD.append('username', this.state.username);\n    FD.append('password', this.state.password);\n    \n    \n    xhr.open(\"POST\", 'http://chat.cs291.com/login', true);\n    //xhr.open(\"POST\", 'http://localhost:4567/login', true);\n    xhr.onreadystatechange = (tokenSetter) => {\n    if (xhr.readyState === 4 && xhr.status === 201) {\n    \tconst tokenSetter = this.context.setToken\n       var jsonResponse = JSON.parse(xhr.responseText);\n       this.startEventSource(jsonResponse[\"token\"]);\n       tokenSetter(jsonResponse[\"token\"])\n       setShowCounter()\n    }\n  };\n    xhr.send(FD);\n    this.props.handleSubmit()\n    //tokenSetter(tk);\n}\n\nrender() {  \n\tconst popupStyle = {  \n  position: 'fixed',  \n  width: \"100%\",  \n  height: \"100%\",  \n  top: '0',  \n  left: '0',  \n  right: '0',  \n  bottom: '0',  \n  margin: 'auto', \n  backgroundColor: \"grey\",  \n} ;\n\nconst popupInnerStyle = {  \n  position: 'absolute',  \n  left: '25%',  \n  right: '25%',  \n  top: '25%',  \n  bottom: '25%', \n  margin: 'auto',  \n  borderRadius: '20px',  \n  background: 'white',  \n} ;\n\n\treturn (  \n\t<div style={popupStyle} className='popup'>  \n\t\t<div style={popupInnerStyle} className='popupInner'>  \n\t\t\t<h1>{this.props.text}</h1>  \n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\tusername: \n\t\t\t    <input type=\"text\" name=\"username\" onChange={this.handleChangeUsername}/>\n\t\t\t    <br/>\n\t\t\t    password: \n\t\t\t    <input type=\"text\" name=\"password\" onChange={this.handleChangePassword}/>\n\t\t\t     <br/>\n\t\t\t    <input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>  \n\t\t</div>  \n\t</div> \n\t); }  \n}  \n\nexport default Popup;","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './dashboard'\nimport Popup from './model'\nimport Store,  {CTX} from './store'\n\nclass App extends Component {\n\n  static contextType = CTX\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPopup: true,\n      history: [],\n      users:[]\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n\n\n\n  }\n\nsendMessage = (message) => {\n  console.log('sendMessage', message);\n}\n\n\nhandleSubmit(){\n    this.setState({  \n       showPopup: !this.state.showPopup  \n    }); \n  }\n\n\n    render() {\n    return (\n      <Store>\n      <div className=\"App\">\n        {this.state.showPopup ?  \n          <Popup  \n            text='User Login' \n            handleSubmit = {this.handleSubmit.bind(this)}  \n          />  : null  \n        } \n          <Dashboard />\n        \n      </div>\n      </Store>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}